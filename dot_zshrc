#!/usr/bin/env zsh

# ~ ðŸ—’ Notes

# \x1B[4;3m and \x1B[4;0m are used to start and stop undercurl in kitty ðŸ’…

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Add common brew completion path
fpath+=("/opt/homebrew/share/zsh/site-functions")

# ~ Antidote package manager, uses ~/.zsh_plugins.txt
if [[ ! -f ~/.zsh_plugins.txt ]]; then
  echo "\x1B[4:3;31mNo antidote plugin list at ~/.zsh_plugins.txt \x1b[4:0;0m"
fi

autoload -U compinit; compinit

source /opt/homebrew/opt/antidote/share/antidote/antidote.zsh
antidote load


# ~~~ $LS_COLORS
if (( $+commands[vivid] && $+commands[gls] )); then
  alias ls="gls --color"
  export LS_COLORS="$(vivid generate catppuccin-frappe)"
else
  echo "\x1B[4:3;31mvivid and/or coreutils not found, \`brew install vivid coreutils\`\x1b[4:0;0m"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# ~ fzf-tab https://github.com/Aloxaf/fzf-tab/wiki/Configuration#configuration
zstyle ':completion:*:git-checkout:*' sort false                    # Disable sort when completing `git checkout`
zstyle ':completion:*:descriptions' format '[%d]'                   # Set descriptions format to enable group support
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}               # Set list-colors to enable filename colorizing
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'gls --color $realpath' # Preview directory's content with gls when completing cd
zstyle ':fzf-tab:*' switch-group ',' '.'                            # Switch group using `,` and `.`
zstyle ':fzf-tab:*' fzf-pad 4                                       # Ensure prompt is large enough with border

# ~ History
export HISTSIZE=1000000
export SAVEHIST=1000000
setopt INC_APPEND_HISTORY     # Write to history immediately
setopt EXTENDED_HISTORY       # Write :start:elapsed:command timestamp formula
setopt SHARE_HISTORY          # Share history among sessions
setopt HIST_EXPIRE_DUPS_FIRST # When trimming history, expire dups first
setopt HIST_IGNORE_ALL_DUPS   # Replace old entries when they are duplicated
setopt HIST_FIND_NO_DUPS      # When searching history, don't display dups
setopt HIST_SAVE_NO_DUPS      # Don't write dups to history file
setopt HIST_IGNORE_SPACE      # Events starting with space are not stored
setopt HIST_REDUCE_BLANKS     # Coalese whitespace when writing history
setopt HIST_VERIFY            # Don't execute immediately on history expansion

unsetopt BEEP # ðŸ™Š

# ~ Aliases
# ~~ Chezmoi
alias cz="chezmoi"
alias czcd="cd $(chezmoi source-path)"
alias czed="chezmoi edit --apply"
# ~~ Editor
export EDITOR=nvim
export NVIM_APPNAME=LazyVim

# ~ Neovim
# ~~ Distributions must be in ~/.config/<dist_name>
alias nvim-astro="NVIM_APPNAME=AstroNvim nvim"
alias nvim-lazy="NVIM_APPNAME=LazyVim nvim"

# https://gist.github.com/elijahmanor/b279553c0132bfad7eae23e34ceb593b
function fzf_nvim() {
  items=("AstroNvim" "LazyVim")
  config=$(printf "%s\n" "${items[@]}" | fzf --prompt="î˜« Neovim Config î˜• " --height=~50% --layout=reverse --border --exit-0)

  if [[ -z $config ]]; then
    echo "Nothing selected"
    return 0
  elif [[ $config == "default" ]]; then
    config=""
  fi

  NVIM_APPNAME=$config nvim $@
}

# ~ Keybinds

# Helpful commands:
#   `bindkey -l`          show existing keymap names
#   `bindkey -M <keymap>` list bindings in keymap
#   `bindkey`             show all bindings
bindkey -r "^U"                         # Unbind <C-u> for subsequent use in fzf
bindkey -M viins '\e.' insert-last-word # ó°˜µ. to insert last word of prev cmd
bindkey -s '\ee' "fzf_nvim\n"           # ó°˜µe to fzf pick an nvim to open

# Must be done in an after init or jeffreytse/zsh-vi-mode breaks the bindings: https://github.com/jeffreytse/zsh-vi-mode/issues/24
zvm_after_init() {
  [[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh
  for script in $(find ~/Dotfiles/ -name '*.zsh'); do
    source $script
  done
}

export PATH=$PATH:~/.local/bin


# Source cargo (rust) env
. "$HOME/.cargo/env"

# ~~~ Volta (the new nvm)
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

